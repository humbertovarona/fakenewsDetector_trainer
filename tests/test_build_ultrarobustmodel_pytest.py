
# Generated by CodiumAI

import pytest

class TestBuildUltrarobustmodel:

    #  The function builds a sequential model with multiple layers.
    def test_builds_sequential_model(self):
        # Arrange
        max_words = 1000
        max_sequence_length = 100
    
        # Act
        model = build_ultrarobustmodel(max_words, max_sequence_length)
    
        # Assert
        assert isinstance(model, Sequential)
        assert len(model.layers) == 8

    #  The function compiles the model with 'adam' optimizer and 'binary_crossentropy' loss.
    def test_compiles_model_with_optimizer_and_loss(self):
        # Arrange
        max_words = 1000
        max_sequence_length = 100
    
        # Act
        model = build_ultrarobustmodel(max_words, max_sequence_length)
    
        # Assert
        assert model.optimizer == 'adam'
        assert model.loss == 'binary_crossentropy'

    #  The function returns the compiled model.
    def test_returns_compiled_model(self):
        # Arrange
        max_words = 1000
        max_sequence_length = 100
    
        # Act
        model = build_ultrarobustmodel(max_words, max_sequence_length)
    
        # Assert
        assert isinstance(model, Sequential)
        assert model.optimizer == 'adam'
        assert model.loss == 'binary_crossentropy'

    #  max_words is 0.
    def test_max_words_is_zero(self):
        # Arrange
        max_words = 0
        max_sequence_length = 100
    
        # Act
        model = build_ultrarobustmodel(max_words, max_sequence_length)
    
        # Assert
        assert isinstance(model, Sequential)
        assert len(model.layers) == 8

    #  max_sequence_length is 0.
    def test_max_sequence_length_is_zero(self):
        # Arrange
        max_words = 1000
        max_sequence_length = 0
    
        # Act
        model = build_ultrarobustmodel(max_words, max_sequence_length)
    
        # Assert
        assert isinstance(model, Sequential)
        assert len(model.layers) == 8

    #  max_words is negative.
    def test_max_words_is_negative(self):
        # Arrange
        max_words = -1000
        max_sequence_length = 100
    
        # Act
        model = build_ultrarobustmodel(max_words, max_sequence_length)
    
        # Assert
        assert isinstance(model, Sequential)
        assert len(model.layers) == 8
